import json
import os
import sys

def read_config(config_path):
    with open(config_path, 'r') as file:
        print('File opened for reading:', file.name)
        return json.load(file)

def should_exclude(path, exclude_list):
    return any(os.path.normpath(exclude) in os.path.normpath(path) for exclude in exclude_list)

def process_files(root_path, exclude_folders, exclude_files):
    combined_content = "# This file was generated by the Combine Files to Markdown script\n\n"
    for root, dirs, files in os.walk(root_path):
        dirs[:] = [d for d in dirs if not should_exclude(os.path.join(root, d), exclude_folders)]
        for file in files:
            if file.endswith(('.py', '.md', '.js', '.py', '.json')) and not should_exclude(os.path.join(root, file), exclude_files):
                file_path = os.path.join(root, file)
                with open(file_path, 'r', encoding='utf-8') as f:
                    print('File opened for reading:', f.name)
                    combined_content += f"## File: {os.path.relpath(file_path, root_path)}\n```{file.split('.')[-1]}\n{f.read()}\n```\n\n"
    return combined_content

def main():
    if len(sys.argv) != 2:
        print("Usage: python script.py <config.json>")
        sys.exit(1)

    config_path = sys.argv[1]
    config = read_config(config_path)
    combined_content = process_files(config['root_path'], config['exclude_folders'], config['exclude_files'])

    with open(config['output_path'], 'w', encoding='utf-8') as output_file:
        print('File opened for writing:', output_file.name)
        output_file.write(combined_content)

if __name__ == "__main__":
    main()
